version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    image: farm_todo:${FARM_TODO_VERSION:-latest}
    restart: always
    env_file:
    - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rmq:
        condition: service_healthy
    environment:
      FARM_TODO_HOST: 0.0.0.0
      FARM_TODO_DB_HOST: farm_todo-db
      FARM_TODO_DB_PORT: 5432
      FARM_TODO_DB_USER: farm_todo
      FARM_TODO_DB_PASS: farm_todo
      FARM_TODO_DB_BASE: farm_todo
      FARM_TODO_RABBIT_HOST: farm_todo-rmq
      FARM_TODO_REDIS_HOST: farm_todo-redis

  db:
    image: postgres:13.8-bullseye
    hostname: farm_todo-db
    environment:
      POSTGRES_PASSWORD: "farm_todo"
      POSTGRES_USER: "farm_todo"
      POSTGRES_DB: "farm_todo"
    volumes:
    - farm_todo-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U farm_todo
      interval: 2s
      timeout: 3s
      retries: 40

  redis:
    image: bitnami/redis:6.2.5
    hostname: "farm_todo-redis"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 50

  rmq:
    image: rabbitmq:3.9.16-alpine
    hostname: "farm_todo-rmq"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    healthcheck:
      test: rabbitmq-diagnostics check_running -q
      interval: 3s
      timeout: 3s
      retries: 50



volumes:
  farm_todo-db-data:
    name: farm_todo-db-data
